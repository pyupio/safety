name: CI

on:
  workflow_call:
  push:
    branches:
      - main
      - chore/*
      - ci/*
  pull_request:
    types:
      - opened
      - synchronize
  schedule:
    - cron: "0 0 * * *"

jobs:
  validate-commits:
    if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
    runs-on: ubuntu-24.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ github.event_name == 'pull_request' && '10' || '2' }}
          
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
    
      - name: Install Hatch
        run: |
          python -m pip install --upgrade pip
          pip install hatch "click<8.3.0"
          
      - name: Validate commit messages
        run: |
          # For PRs, validate all commits in the PR
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "Validating PR commits..."
            hatch run cz check --rev-range ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}
          # For pushes to main branches, validate the latest commit
          else
            echo "Validating pushed commit..."
            hatch run cz check --rev-range HEAD~1..HEAD
          fi

  lint:
    runs-on: ubuntu-24.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ github.event_name == 'pull_request' && '10' || '2' }}

      - name: Check for changed Python files
        id: check-files
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]; then
            echo "No lint on schedule"
            echo "should_check=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          if [ "${{ github.event_name }}" == "pull_request" ]; then
            CHANGED_FILES=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep '\.py$' || true)
          else
            CHANGED_FILES=$(git diff --name-only --diff-filter=ACMRT HEAD^ HEAD | grep '\.py$' || true)
          fi
          
          if [ -n "$CHANGED_FILES" ]; then
            echo "files<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            echo "should_check=true" >> $GITHUB_OUTPUT
          else
            echo "No Python files to check"
            echo "should_check=false" >> $GITHUB_OUTPUT
          fi
  
      - name: Set up Python
        if: steps.check-files.outputs.should_check == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
  
      - name: Install Hatch
        if: steps.check-files.outputs.should_check == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install hatch "click<8.3.0"
  
      - name: Run style and typing checks
        if: steps.check-files.outputs.should_check == 'true'
        run: |
          FILES=$(echo "${{ steps.check-files.outputs.files }}" | tr '\n' ' ')
          echo "Running checks on files: ${FILES}"
          hatch run lint:all ${FILES}

  matrix:
    needs: lint
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    
    steps:

    - name: Check lint status
      if: ${{ needs.lint.result != 'success' && needs.lint.result != 'skipped' }}
      run: |
        echo "lint job failed with result: ${{ needs.lint.result }}"
        exit 1
      
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Generate matrix
      id: set-matrix
      run: |
        matrix=$(python .github/scripts/matrix.py pyproject.toml --no-os-matrix)
        echo "Generated matrix:"
        echo "$matrix" | jq '.'
        echo "matrix=$matrix" >> $GITHUB_OUTPUT

  test:
    needs: matrix

    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
      fail-fast: true
    
    runs-on: ${{ matrix.os_type || 'ubuntu-24.04' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Hatch
      run: |
        python -m pip install --upgrade pip
        pip install hatch "click<8.3.0"

    - name: Create temporary CI config
      run: |
        python .github/scripts/ci_pyproject.py pyproject.toml

    - name: Run tests
      continue-on-error: ${{ matrix.experimental || false }}
      run: |
        hatch run test.py${{ matrix.python-version }}${{ matrix.target && format('-{0}', matrix.target) }}${{ matrix.os_type && format('-{0}', matrix.os_type) }}:test
